name: build

on:
  push:
    branches:
      - master
      - gh-actions

env:
  YARN_CACHE: 001

jobs:
  release:
    timeout-minutes: 10
    if: github.event_name == 'push'
    runs-on: macos-latest
    strategy:
      matrix:
        rust-target: [ 'x86_64-unknown-linux-gnu', 'i686-unknown-linux-gnu', 'x86_64-apple-darwin' ]
    name: Rust stable-${{ matrix.rust-target }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
#       - name: Setup Node.js environment
#         uses: actions/setup-node@v2.1.5
#         with:
#           version: 14
#       - uses: actions/cache@v2
#         with:
#           path: '**/node_modules'
#           key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
#       - name: Install Yarn
#         run: npm i -g yarn && yarn
#       - name: Build www
#         run: yarn build:www
      - name: rust-toolchain
        # You may pin to the exact commit or the version.
        # uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f
        uses: actions-rs/toolchain@v1.0.6
        with:
          # Rust toolchain name.
          toolchain: stable
          # Target triple to install for this toolchain
          target: ${{ matrix.rust-target }}
          # Set installed toolchain as default
          override: true
#           profile: # optional
#           # Comma-separated list of components to be additionally installed for a new toolchain
#           components: # optional
      - uses: Swatinem/rust-cache@v1
      - name: Build server
        run: cd server && cargo build --release --target ${{ matrix.rust-target }}
