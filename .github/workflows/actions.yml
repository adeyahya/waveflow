name: build

on:
  push:
    branches:
      - master
      - gh-actions

jobs:
  release:
    timeout-minutes: 10
    if: github.event_name == 'push'
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        rust-target:
          ["x86_64-unknown-linux-gnu", "armv7-unknown-linux-gnueabihf"]
    name: Rust stable-${{ matrix.rust-target }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Install dependencies
        run: sudo apt-get update -y && sudo apt-get install -y binutils-arm-linux-gnueabi
      - name: rust-toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          target: ${{ matrix.rust-target }}
          override: true
      - name: install sqlite3-dev
        run: sudo apt-get install libsqlite3-dev
      - name: build server
        run: cd server && cargo build --release --target ${{ matrix.rust-target }}
      - uses: Swatinem/rust-cache@v1
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          version: 14
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Yarn
        run: npm i -g yarn && yarn
      - name: Build www
        run: yarn build:www
#       - name: Zip Release
#         uses: TheDoctor0/zip-release@0.4.2
#         with:
# Filename for archive
#           filename: ${{ matrix.rust-target }}.zip
# Base path for archive files
#           path: # optional, default is .
#           # Working directory before zipping
#           directory: # optional, default is .
#           # List of excluded files / directories
#           exclusions: # optional, default is
#           # Tool to use for archiving
#           type: # optional, default is zip
